<?php if(!isset($_GET['test1011'])) return;?>

		<aside class="accordion">
			<h1><span class="icon icon-type-3 icon-1 has-children"></span> <span class="has-children"> Items  menu </span></h1>
			<div></div>
		</aside>


<style>
	aside.accordion{
		display:none;
	}
@media only screen and (max-width: 670px) {
	.list-22{
		display:none !important;
	}
	aside.accordion{
		display:block;
	}
}
    .accordion {
  width: 100%;
  margin: 20px auto;
}
.accordion h1, h2, h3, h4 {
  cursor: pointer;
}

.accordion h1 {
  padding: 15px 20px;
  background-color: #f3f4f6;
  font-size: 1rem;
  font-weight: normal;
  color: #cecece;
}
.accordion h1 >span.has-children {
    color: #000;

    padding-left: 10px;
}
.accordion h1:hover {
  color: #dfdfe0;
}
.accordion h1:first-child {
  border-radius: 10px 10px 0 0;
}
.accordion h1:last-of-type {
  border-radius: 0 0 10px 10px;
}
.accordion h1:not(:last-of-type) {
  border-bottom: 1px dotted #dfdfe0;
}
.accordion div, .accordion p {
  display: none;
}
.accordion h2 {
  padding: 5px 0 5px 25px;
  background-color: #f3f4f6;
  font-size: 1.1rem;
  color: #333;
}
.accordion h2:hover {
  background-color: #dfdfe0;
}
.accordion h3 {
  padding: 5px 0 5px 30px;
  background-color: #fff;
  font-size: .9rem;
  color: #ddd;
}
.accordion h3:hover {
  background-color: #34495e;
}
.accordion h4 {
  padding: 5px 0 5px 35px;
  background-color: #ffc25a;
  font-size: .9rem;
  color: #af720a;
}
.accordion h4:hover {
  background-color: #e0b040;
}
.accordion p {
  padding: 15px 35px;
  background-color: #ddd;
  font-family: 'Open Sans', sans-serif;
  font-size: .8rem;
  color: #333;
  line-height: 1.3rem;
}
.accordion .opened-for-codepen {
  display: block;
}

.accordion a {
	width: 100%;
}
</style>

<script>
    var headers = ["H1","H2","H3","H4","H5","H6"];
		$( document ).ready(function() {
				function  menu_factory(){
					 this.h_counter = 1;
					 this.src = $('.list-22').children();//[li:{a,div},]
					 this.dest = $('aside.accordion >div')	;

					 this.itrt = function(i,li,reset){
							 if(reset){console.log(reset)
								 this.h_counter = 1;
							 }else  ;
							 let children = $(li).children();
							 let $div = $('<DIV></DIV>');
							 let $h = $('<'+headers[this.h_counter]
							 							+'></'+headers[this.h_counter]+'>')

							 if(children.length>0){
							     
								 $h.append($(children[0]).clone())
							 }
							 if(children.length>1){
									 children = $($(children[1]).find('ul:first')).children();
									 if(children.length>0){
									   $h.prepend($('<span class="icon icon-type-3 icon-46 has-children"></span>'));  
									  this.h_counter++;
									 for(var j=0;j<children.length;j++){

									 	$div.append(this.itrt(i,children[j],false));
										}
										this.h_counter--;
								 }
							 }


							return [$h,$div];
	 					}
						this.itrt.bind(this);
						for(var i=0;i<this.src.length;i++){
							this.dest.append(this.itrt(i,this.src[i],true));
							//console.log(a);
						}
						//this.src.each(function(i,li){console.log(this)});
				}
				const creator = new menu_factory();



		});

$(".accordion").click(function(e) {
  var target = e.target,
      name = target.nodeName.toUpperCase();
  if($(target).hasClass('has-children')){
      target = target.parentNode;
      name = target.nodeName.toUpperCase();
  }    
  if($.inArray(name,headers) > -1) {
    var subItem = $(target).next();

    //slideUp all elements (except target) at current depth or greater
    var depth = $(subItem).parents().length;
    var allAtDepth = $(".accordion p, .accordion div").filter(function() {
      if($(this).parents().length >= depth && this !== subItem.get(0)) {
        return true;
      }
    });
    $(allAtDepth).slideUp("fast");

    //slideToggle target content and adjust bottom border if necessary
    subItem.slideToggle("fast",function() {
        $(".accordion :visible:last").css("border-radius","0 0 10px 10px");
    });
    $(target).css({"border-bottom-right-radius":"0", "border-bottom-left-radius":"0"});
  }
});
</script>
